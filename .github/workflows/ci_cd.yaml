name: CI/CD Pipeline

on:
    push:
        branches: [dev, main]
    pull_request:
        branches: [dev, main]
    workflow_dispatch:

jobs:
    primeiro-job:
        name: Primeiro Job
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh
            - name: Create virtual environment and install dependencies
              run: |
                uv venv
                source .venv/bin/activate
                uv pip install --upgrade pip
                uv pip install -r requirements.txt
            - name: Run script
              run: |
                variable = "Hello, World!"
                print(variable)
              shell: python

    lint:
        runs-on: ubuntu-latest
        needs: primeiro-job
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh
            - name: Create virtual environment and install dependencies
              run: |
                uv venv
                source .venv/bin/activate
                uv pip install --upgrade pip
                uv add ruff
            - name: Run linter
              run: |
                source .venv/bin/activate
                uv run ruff check --no-cache --fix

    test:
        runs-on: ubuntu-latest
        needs: lint
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh
            - name: Create virtual environment and install dependencies
              run: |
                uv venv
                source .venv/bin/activate
                uv pip install --upgrade pip
                uv pip install -r requirements.txt
                uv pip install pytest
                uv pip install -e .
            - name: Run tests
              run: |
                source .venv/bin/activate
                uv run pytest tests/src -v --cache-clear --rootdir=.
    # build docker image and push to docker registry
    ci:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: authenticate to Docker registry
              uses: docker/login-action@v3.1.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/build-push-action@v5.3.0
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: |
                    pauloyuncha/breast-cancer-detection-ml:latest
                    pauloyuncha/breast-cancer-detection-ml:v${{ github.run_number }}
    # deploy to kubernetes cluster
    cd:
        runs-on: ubuntu-latest
        needs: [ci]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.5
            - name: Set up k8s context
              uses: azure/k8s-set-context@v4.0.0
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.K8S_CONFIG }}
            - name: Execução do Manifesto
              uses: Azure/k8s-deploy@v5
              with:
                manifests: |
                  ./k8s/inference-pipeline-deployment.yaml
                images: |
                  pauloyuncha/breast-cancer-detection-ml:v${{ github.run_number }}
            